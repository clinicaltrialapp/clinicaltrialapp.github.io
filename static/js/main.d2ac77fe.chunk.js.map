{"version":3,"sources":["components/context/image-context.js","components/Login.js","components/Selector.js","components/Utils/AuthCheck.js","components/Landing.js","components/Cropper.js","components/CropDialog.js","components/Crop.js","components/DiseaseSelector.js","components/UploadDialog.js","components/SuccessDialog.js","components/Cancel.js","components/Upload.js","components/NavBar.js","components/Footer.js","App.js","serviceWorker.js","firebase.config.js","index.js"],"names":["ImageContext","createContext","uiConfig","signInFlow","signInSuccessUrl","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","Login","className","style","textAlign","paddingTop","src","alt","padding","color","fontSize","display","height","width","firebaseAuth","useStyles","makeStyles","theme","root","margin","spacing","input","SelectImage","history","useHistory","useContext","imgSrc","setImgSrc","setHasCropped","hasCropped","classes","useEffect","push","ImageSetter","result","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","readAsDataURL","marginTop","marginBottom","accept","id","type","onChange","capture","htmlFor","Button","variant","component","ShowIfAuth","props","currentUser","children","ShowIfNoAuth","AuthenticatedOnly","to","Landing","Cropper","useState","imgRef","setImgRef","aspect","unit","x","y","crop","setCrop","onLoad","useCallback","img","makeClientCrop","croppedImageUrl","getCroppedImg","setResult","image","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","toDataURL","onImageLoaded","c","onComplete","Transition","React","forwardRef","ref","Slide","direction","CropDialog","open","handleClose","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","paddingBottom","paddingLeft","paddingRight","fontColor","onClick","fontWeight","flexGrow","backgroundColor","menuButton","marginRight","title","Crop","setOpen","overflow","AppBar","position","Toolbar","IconButton","edge","aria-label","goBack","Typography","top","left","GetDiseases","uri","a","async","fetch","response","json","diseases_json","map","disease","String","toUpperCase","Set","sort","DiseaseSelector","diseases","setDiseases","loading","active","Autocomplete","freeSolo","getOptionSelected","option","value","getOptionLabel","options","onInputChange","v","onDiseaseChange","renderInput","params","TextField","label","fullWidth","InputProps","endAdornment","CircularProgress","size","marginLeft","UploadDialog","disableBackdropClick","disableEscapeKeyDown","SuccessDialog","isOpen","successClose","DialogActions","autoFocus","Cancel","Base64MimeType","encoded","mime","match","GetCurrentAppUser","user","email","Upload","setDisease","success","setSuccess","Container","trim","disease_selected","upload_dir","file_name","Date","now","contentType","storage","child","putString","upload_task","state","Error","console","error","NavBar","DialogTitle","DialogContent","DialogContentText","signOut","then","startIcon","Footer","show","setShow","xs","sm","textDecoration","href","md","lg","App","routes","path","exact","Provider","isLocalhost","Boolean","window","location","hostname","register","config","navigator","URL","process","origin","swUrl","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","EMailAllowed","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","initializeApp","FirebaseConfig","FirebaseSetup","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d2ac77fe.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const ImageContext = createContext(null);","import React from 'react'\r\n// import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n\r\n// eslint-disable-next-line\r\nimport * as firebaseui from 'firebaseui';\r\n\r\n\r\n\r\n// Configure FirebaseUI.\r\nconst uiConfig = {\r\n    signInFlow: 'redirect',\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    signInSuccessUrl: '/',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n    ]//,\r\n    // tosUrl: '<your-tos-url>',\r\n    // Privacy policy url/callback.\r\n    // privacyPolicyUrl: ''\r\n};\r\n\r\nexport default function Login() {\r\n    return (\r\n        <div className=\"center\" style={{ textAlign: \"center\", paddingTop: \"100px\" }}>\r\n            <img src=\"/logo192.png\" alt=\"Logo\" />\r\n            <div className=\"center\" style={{ textAlign: \"center\", padding: \"30px\", color: \"#808080\", fontSize: \"20px\" }}>\r\n                    <p>This web app is proprietary of Skinzy software solutions and intended for clinical image acquisition for research and development task.</p>\r\n            </div>\r\n            <div style={{ display: \"inline-block\", height: \"50%\", width: \"70%\"}}>\r\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} style={{}} />\r\n            </div>\r\n        </div>\r\n    );\r\n}   ","import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { ImageContext } from './context/image-context';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst SelectImage = () => {\r\n    const history = useHistory();\r\n\r\n    // eslint-disable-next-line\r\n    const { imgSrc, setImgSrc, hasCropped, setHasCropped } = useContext(ImageContext);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const Entry = () => {\r\n            setImgSrc(null);\r\n            setHasCropped(false);\r\n        }\r\n        Entry();\r\n    }, [setImgSrc, setHasCropped]);\r\n\r\n    useEffect(() => {\r\n        if (imgSrc) {\r\n            history.push(\"/crop\");;\r\n        }\r\n    }, [imgSrc, history]);\r\n\r\n    const ImageSetter = (result) => {\r\n        setImgSrc(result);\r\n    }\r\n\r\n    const onSelectFile = e => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const reader = new FileReader();\r\n            ImageSetter(null);\r\n            reader.addEventListener(\"load\", () => {\r\n                ImageSetter(reader.result);\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"center\" style={{ textAlign: \"center\", paddingTop: \"100px\" }}>\r\n                <div className=\"center\" style={{ textAlign: \"center\", padding: \"30px\", color: \"#808080\", fontSize: \"20px\" }}>\r\n                    <p>This web app is proprietary of Skinzy software solutions and intended for clinical image acquisition for research and development task.</p>\r\n                    <p>Click on button below, crop affected part, choose disease or name a new disease and upload</p>\r\n                </div>\r\n                <div style={{ marginTop: \"30px\", marginBottom: \"30px\" }}>\r\n                    <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        id=\"outlined-button-camera\"\r\n                        type=\"file\"\r\n                        onChange={onSelectFile}\r\n                        capture\r\n                    />\r\n                    <label htmlFor=\"outlined-button-camera\">\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                            <PhotoCamera /> &nbsp; CAMERA\r\n                        </Button>\r\n                    </label>\r\n                </div>\r\n                <div style={{ marginTop: \"50px\", marginBottom: \"30px\" }}>\r\n                    <input\r\n                        accept=\"image/*\"\r\n                        className={classes.input}\r\n                        id=\"outlined-button-file\"\r\n                        type=\"file\"\r\n                        onChange={onSelectFile}\r\n                    />\r\n                    <label htmlFor=\"outlined-button-file\">\r\n                        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                            <FileCopyIcon /> &nbsp; CHOOSE IMAGE\r\n                        </Button>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SelectImage;\r\n","import React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport function ShowIfAuth(props) {\r\n    if (firebase.auth().currentUser != null)\r\n        return <>{props.children}</>;\r\n    else\r\n        return <></>;\r\n}\r\n\r\nexport function ShowIfNoAuth(props) {\r\n    if (firebase.auth().currentUser == null)\r\n        return <>{props.children}</>;\r\n    else\r\n        return <></>;\r\n}\r\n\r\nexport function AuthenticatedOnly(props) {\r\n    return <>\r\n        <ShowIfAuth>\r\n            {props.children}\r\n        </ShowIfAuth>\r\n        <ShowIfNoAuth>\r\n            <Redirect to=\"/\" />\r\n        </ShowIfNoAuth>\r\n    </>;\r\n};\r\n\r\nexport default AuthenticatedOnly;\r\n","import React from 'react'\r\nimport Login from './Login';\r\nimport SelectImage from './Selector';\r\nimport { ShowIfAuth, ShowIfNoAuth } from './Utils/AuthCheck';\r\n\r\nexport default function Landing(props) {\r\n    return <>\r\n        <ShowIfAuth>\r\n            <SelectImage />\r\n        </ShowIfAuth>\r\n        <ShowIfNoAuth>\r\n            <Login />\r\n        </ShowIfNoAuth>\r\n        </>;\r\n};\r\n\r\n","import React, { useState, useCallback, useContext } from \"react\";\r\n\r\nimport ReactCrop from \"react-image-crop\";\r\nimport { ImageContext } from './context/image-context';\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\n\r\nconst Cropper = props => {\r\n  // eslint-disable-next-line\r\n  const { imgSrc, setImgSrc } = useContext(ImageContext);\r\n  const [imgRef, setImgRef] = useState(null);\r\n  const [crop, setCrop] = useState({\r\n    // Cropping Occurs in 1:1 Aspect Ratio\r\n    aspect: 1 / 1,\r\n    unit: '%',\r\n    x: 25,\r\n    y: 25,\r\n    width: 50,\r\n  });\r\n\r\n  const onLoad = useCallback(img => {\r\n    setImgRef(img);\r\n  }, []);\r\n\r\n  const makeClientCrop = crop => {\r\n    if (imgRef && crop.width && crop.height) {\r\n      const croppedImageUrl = getCroppedImg(imgRef, crop);\r\n      props.setResult(croppedImageUrl);\r\n    }\r\n  };\r\n\r\n  const getCroppedImg = (image, crop) => {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return canvas.toDataURL(\"image/jpeg\");\r\n  };\r\n\r\n  makeClientCrop(crop);\r\n\r\n  return (\r\n    <ReactCrop\r\n      className={props.className}\r\n      src={imgSrc}\r\n      onImageLoaded={onLoad}\r\n      crop={crop}\r\n      onChange={c => setCrop(c)}\r\n      onComplete={makeClientCrop}\r\n      style={{ height: \"100%\", width: \"100%\" }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Cropper;","import React from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport CropIcon from '@material-ui/icons/Crop';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst CropDialog = props => {\r\n    const { open, handleClose } = props;\r\n    \r\n    return (\r\n        <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <div \r\n                    style={{ \r\n                        paddingTop: \"50px\",\r\n                        paddingBottom: \"50px\",\r\n                        paddingLeft: \"20px\",\r\n                        paddingRight: \"20px\",\r\n                        textAlign: \"center\",\r\n                        fontSize: \"100px\",\r\n                        fontColor: \"black\" \r\n                    }}\r\n                    onClick={handleClose}\r\n                >\r\n                <CropIcon \r\n                    color='inherit'\r\n                    fontSize='inherit'\r\n                />\r\n                <h5 style={{ \r\n                    margin: \"0px\",\r\n                    paddingTop: \"4px\",\r\n                    paddingLeft: \"20px\",\r\n                    fontSize: \"20px\",\r\n                    fontWeight: \"500\" \r\n                }}>Pinch to Crop the Image to Highlight Affected Area</h5>\r\n            </div>\r\n            </Dialog>\r\n    );\r\n}\r\n\r\nexport default CropDialog;","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { ImageContext } from './context/image-context';\r\nimport Cropper from './Cropper';\r\nimport CropDialog from './CropDialog';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: \"black\",\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nconst Crop = () => {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    // eslint-disable-next-line\r\n    const { imgSrc, setImgSrc } = useContext(ImageContext);\r\n\r\n    // eslint-disable-next-line\r\n    const { hasCropped, setHasCropped } = useContext(ImageContext);\r\n\r\n    const [result, setResult] = useState();\r\n\r\n\r\n    const goBackHandler = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    const cropHandler = () => {\r\n        if (result) {\r\n            setImgSrc(result);\r\n        }\r\n        setHasCropped(true);\r\n        history.push(\"/upload\");\r\n    }\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CropDialog open={open} handleClose={handleClose} />\r\n            <div className={classes.root} style={{ backgroundColor: \"black\", height: \"100%\", overflow: \"auto\" }}>\r\n                <AppBar position=\"fixed\" style={{ backgroundColor: \"#303030\", height: \"10%\" }}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={goBackHandler}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                        </Typography>\r\n                        <Button color=\"inherit\" onClick={cropHandler}>CROP</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <div style={{ height: \"80%\", width: \"95%\", position: \"fixed\", top: \"12%\", left: \"2.5%\" }}>\r\n                    <Cropper className=\"react-crop-parent\" result={result} setResult={setResult} />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Crop;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n/* eslint-disable no-use-before-define */\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nasync function GetDiseases(uri) {\r\n  const response = await fetch(uri);\r\n  let diseases_json = await response.json();\r\n  diseases_json = diseases_json.map(disease => { return String(disease).toUpperCase(); });\r\n  diseases_json = [...new Set(diseases_json)];\r\n  diseases_json = diseases_json.sort();\r\n  return diseases_json;\r\n}\r\n\r\nconst DiseaseSelector = props => {\r\n  const [diseases, setDiseases] = useState([]);\r\n  const loading = diseases.length === 0;\r\n  const uri = props.uri;\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    (async () => {\r\n      // Fetch Diseases from URI\r\n      // Ensures they are all in\r\n      // Upper Case\r\n      // And Sorted in Alphabetical Order\r\n      const diseases_json = await GetDiseases(uri);\r\n      if (active) {\r\n        setDiseases(diseases_json);\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading, uri]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"disease-select\"\r\n      style={{ width: 300, display: \"inline-block\" }}\r\n      freeSolo\r\n      getOptionSelected={(option, value) => option === value}\r\n      getOptionLabel={option => option}\r\n      options={diseases}\r\n      loading={loading}\r\n      onInputChange={(e, v) => props.onDiseaseChange(v)}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Select Disease\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DiseaseSelector;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n    padding: \"20px\"\r\n  },\r\n}));\r\n\r\nconst UploadDialog = props => {\r\n    const classes = useStyles();\r\n    const { open } = props;\r\n    \r\n    return (\r\n        <Dialog \r\n            disableBackdropClick={true}\r\n            disableEscapeKeyDown={true}\r\n            open={open}>\r\n            <div className={classes.root}>\r\n                <CircularProgress /> \r\n                <h5 style={{ \r\n                    margin: \"0px\",\r\n                    paddingTop: \"4px\",\r\n                    paddingLeft: \"20px\",\r\n                    fontSize: \"20px\",\r\n                    fontWeight: \"500\" \r\n                }}>\r\n                    Uploading Image\r\n                </h5>   \r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default UploadDialog;","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport BeenhereIcon from '@material-ui/icons/Beenhere';\r\n\r\nconst SuccessDialog = props => {\r\n    const { isOpen, successClose } = props;\r\n    \r\n    return (\r\n        <Dialog \r\n            disableBackdropClick={true}\r\n            disableEscapeKeyDown={true}\r\n            open={isOpen}>\r\n            <div style={{ \r\n                    paddingTop: \"50px\",\r\n                    paddingBottom: \"50px\",\r\n                    paddingLeft: \"20px\",\r\n                    paddingRight: \"20px\",\r\n                    textAlign: \"center\",\r\n                    fontSize: \"100px\" \r\n                }}>\r\n                <BeenhereIcon \r\n                    color='primary'\r\n                    fontSize='inherit'\r\n                />\r\n                <h5 style={{ \r\n                    margin: \"0px\",\r\n                    paddingTop: \"4px\",\r\n                    paddingLeft: \"20px\",\r\n                    fontSize: \"20px\",\r\n                    fontWeight: \"500\" \r\n                }}>Image Uploaded Successfully</h5>\r\n            </div>\r\n            <DialogActions>\r\n                <Button onClick={successClose} style={{ fontSize: \"15px\" }} color=\"primary\" autoFocus>\r\n                    OK\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default SuccessDialog;","import React, { useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ImageContext } from './context/image-context';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst Cancel = () => {\r\n    // eslint-disable-next-line\r\n    const {imgSrc, setImgSrc, hasCropped, setHasCropped} = useContext(ImageContext);\r\n    let history = useHistory();\r\n    const CancelHandler = () => {\r\n        setImgSrc(null);\r\n        setHasCropped(false);\r\n        history.push(\"/\");\r\n    }\r\n    return (\r\n        <Button\r\n            onClick={CancelHandler}\r\n            variant=\"contained\"\r\n            color='secondary'\r\n            component=\"span\"\r\n            style={{ marginTop: \"30px\" }}\r\n        >\r\n            <ClearIcon /> &nbsp; CANCEL\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default Cancel;","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ImageContext } from \"./context/image-context\";\r\nimport DiseaseSelector from \"./DiseaseSelector\";\r\nimport UploadDialog from \"./UploadDialog\";\r\nimport SuccessDialog from \"./SuccessDialog\";\r\nimport Cancel from \"./Cancel\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\n\r\nimport firebase from \"firebase/app\";\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\nfunction Base64MimeType(encoded) {\r\n  if (typeof encoded !== \"string\") {\r\n    return null;\r\n  }\r\n  var mime = encoded.match(/data:([a-zA-Z0-9]+\\/[a-zA-Z0-9-.+]+).*,.*/);\r\n  if (mime && mime.length) {\r\n    return mime[1];\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction GetCurrentAppUser() {\r\n  const user = firebase.auth().currentUser;\r\n  if (user == null)\r\n    return \"user\";\r\n  const email = user.email;\r\n  if (email == null || email === \"\")\r\n    return \"user\";\r\n  return email;\r\n}\r\n\r\nconst Upload = () => {\r\n  let history = useHistory();\r\n\r\n  // eslint-disable-next-line\r\n  const { imgSrc, setImgSrc, hasCropped, setHasCropped } = useContext(ImageContext);\r\n\r\n  // eslint-disable-next-line\r\n  const [disease, setDisease] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    if (open)\r\n      setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    if (!open)\r\n      setOpen(true);\r\n  };\r\n\r\n  const successClose = () => {\r\n    setSuccess(false);\r\n    setHasCropped(false);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const successOpen = () => {\r\n    setSuccess(true);\r\n  };\r\n\r\n  async function UploadHandler() {\r\n    if (imgSrc == null || disease == null || disease.trim() === \"\") return; //TODO: Error\r\n    try {\r\n      handleOpen();\r\n\r\n      const disease_selected = String(disease).trim().toUpperCase();\r\n      const upload_dir = \"images/\" + disease_selected + \"/\";\r\n\r\n      const user = GetCurrentAppUser();\r\n      const file_name = Date.now() + \"_\" + user;\r\n\r\n      const contentType = Base64MimeType(imgSrc);\r\n\r\n      const upload_task = await firebase\r\n        .storage()\r\n        .ref(upload_dir)\r\n        .child(file_name)\r\n        .putString(imgSrc, \"data_url\", { contentType: contentType });\r\n\r\n      handleClose();\r\n      if (upload_task.state === \"success\")\r\n        successOpen();\r\n      else {\r\n        throw new Error(\"Failed \" + upload_task.state);\r\n      }\r\n    } catch (err) {\r\n      handleClose();\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <UploadDialog open={open} />\r\n      <SuccessDialog isOpen={success} successClose={successClose} />\r\n      <Container style={{ marginTop: \"10%\", textAlign: \"center\", height: \"80%\" }}>\r\n        <img\r\n          src={imgSrc}\r\n          alt=\"Crop\"\r\n          style={{ width: \"50%\", height: \"50%\" }}\r\n        />\r\n        <div className=\"center\" style={{ color: \"#808080\", fontSize: \"20px\" }}>\r\n          <p>Write or select disease name.</p>\r\n        </div>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <DiseaseSelector uri=\"/diseases.json\" onDiseaseChange={setDisease} />\r\n        </div>\r\n        <Button\r\n          onClick={UploadHandler}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          component=\"span\"\r\n          style={{ marginTop: \"5%\" }}\r\n        >\r\n          <PublishIcon /> &nbsp; UPLOAD IMAGE\r\n        </Button>\r\n        <div>\r\n          <Cancel />\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { ShowIfAuth } from './Utils/AuthCheck';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport PowerSettingsNew from \"@material-ui/icons/PowerSettingsNew\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst NavBar = () => {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    firebase.auth().signOut().then(() => {\r\n      history.push(\"/refresh\")\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Logout\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure you want to Log Out?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={logoutHandler} color=\"primary\">\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <img src=\"/logo192.png\" style={{ width: \"30px\", height: \"30px\" }} alt=\"Logo\" />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Skinzy\r\n          </Typography>\r\n          <ShowIfAuth>\r\n            <Button color=\"inherit\" onClick={handleClickOpen} startIcon={<PowerSettingsNew />} >LOGOUT</Button>\r\n          </ShowIfAuth>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport { Row, Col } from 'react-flexbox-grid';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const showHandler = () => {\r\n        setShow(!show);\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-copyright\"  onClick={showHandler}>\r\n                © Copyright 2020 Skinzy.in Skinzy® Software Solutions Pvt. Ltd. All Rights Reserved\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                {show ? <Button style={{ backgroundColor: \"lightblue\", color: \"black\" }}>HIDE</Button> : <Button style={{ backgroundColor: \"black\", color: \"lightblue\" }}>CONTACT US</Button>}\r\n                </div>\r\n            </div>\r\n            <div className={show ? \"contact-list\" : \"contact-list-hidden\"}>\r\n                <Row className=\"contact-list-item\">\r\n                    <Col xs={1} sm={1}><LanguageIcon /></Col>\r\n                    <Col xs={11} sm={11} style={{ paddingLeft: \"15px\" }}><a style={{ color: \"lightblue\", textDecoration: \"none\" }}href=\"http://www.skinzy.in/\">Website</a></Col>\r\n                </Row>\r\n                <Row className=\"contact-list-item\">\r\n                    <Col xs={1} sm={1}><LocationOnIcon /></Col>\r\n                    <Col xs={11} sm={11} style={{ paddingLeft: \"15px\" }}>Sardar Patel Technology Business Incubator (SP-TBI),Munshi Nagar, Andheri (W) Mumbai,Maharashtra 400053</Col>\r\n                </Row>\r\n                <Row className=\"contact-list-item\">\r\n                    <Col xs={1} sm={1} md={1} lg={1}><PhoneIcon /></Col>\r\n                    <Col xs={11} sm={11} md={11} lg={11} style={{ paddingLeft: \"15px\" }}>Main: +91 8657424574</Col>\r\n                </Row>\r\n                <Row className=\"contact-list-item\">\r\n                    <Col xs={1} sm={1} md={1} lg={1}><EmailIcon /></Col>\r\n                    <Col xs={11} sm={11} md={11} lg={11} style={{ paddingLeft: \"15px\" }}>drkalbande@skinzy.in</Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from 'react-router-dom';\r\n\r\nimport { ImageContext } from './components/context/image-context';\r\nimport Landing from './components/Landing';\r\nimport Crop from './components/Crop';\r\nimport Upload from './components/Upload';\r\nimport NavBar from './components/NavBar';\r\nimport Footer from './components/Footer';\r\nimport AuthenticatedOnly from './components/Utils/AuthCheck';\r\n\r\n\r\nconst App = () => {\r\n  const [imgSrc, setImgSrc] = useState(null);\r\n  const [hasCropped, setHasCropped] = useState(false);\r\n  let routes;\r\n\r\n  if (imgSrc && hasCropped) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <NavBar />\r\n          <Landing />\r\n          <Footer />\r\n        </Route>\r\n        <Route path=\"/upload\" exact>\r\n          <AuthenticatedOnly>\r\n            <NavBar />\r\n            <Upload />\r\n            <Footer />\r\n          </AuthenticatedOnly>\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n  } else if (imgSrc) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <NavBar />\r\n          <Landing />\r\n          <Footer />\r\n        </Route>\r\n        <Route path=\"/crop\" exact>\r\n          <AuthenticatedOnly>\r\n            <Crop />\r\n          </AuthenticatedOnly>\r\n        </Route>\r\n        <Route path=\"/upload\" exact>\r\n          <AuthenticatedOnly>\r\n            <NavBar />\r\n            <Upload />\r\n            <Footer />\r\n          </AuthenticatedOnly>\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <NavBar />\r\n          <Landing />\r\n          <Footer />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n  return (\r\n      <Router>\r\n        <ImageContext.Provider value={{ imgSrc, setImgSrc, hasCropped, setHasCropped }}>\r\n          {routes}\r\n        </ImageContext.Provider>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// This given key is public\r\n// https://stackoverflow.com/questions/37482366/is-it-safe-to-expose-firebase-apikey-to-the-public\r\n// In order to secure it, please refer to\r\n// https://stackoverflow.com/questions/35418143/how-to-restrict-firebase-data-modification\r\n\r\nexport const firebaseConfig =\r\n{\r\n\r\n  apiKey:\r\n    \"AIzaSyBOeReZ_pUp_Dq0tfc_jxJmGIOdkxkOz5Q\",\r\n\r\n  authDomain:\r\n    \"skinzyimageupload.firebaseapp.com\",\r\n\r\n  databaseURL:\r\n    \"https://skinzyimageupload.firebaseio.com\",\r\n\r\n  projectId:\r\n    \"skinzyimageupload\",\r\n\r\n  storageBucket:\r\n    \"skinzyimageupload.appspot.com\",\r\n\r\n  messagingSenderId:\r\n    \"1031661596743\",\r\n\r\n  appId:\r\n    \"1:1031661596743:web:ca7b799a150c172dde4162\",\r\n\r\n  measurementId:\r\n    \"G-LQL5RCYG9M\",\r\n\r\n  // Separate from the Rest of Config\r\n  // Treat as Different\r\n\r\n  EMailAllowed: \"\"\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { firebaseConfig as FirebaseConfig } from \"./firebase.config\";\r\n\r\nasync function FirebaseSetup() {\r\n        // Wait till Firebase Load Complete before Firing\r\n        function getCurrentUser(auth) {\r\n                return new Promise((resolve, reject) => {\r\n                        const unsubscribe = auth.onAuthStateChanged(user => {\r\n                                unsubscribe();\r\n                                resolve(user);\r\n                        }, reject);\r\n                });\r\n        }\r\n        // If you want your app to work offline and load faster, you can change\r\n        // unregister() to register() below. Note this comes with some pitfalls.\r\n        // Learn more about service workers: https://bit.ly/CRA-PWA\r\n        serviceWorker.register();\r\n\r\n        firebase.initializeApp(FirebaseConfig);\r\n        await getCurrentUser(firebase.auth());\r\n        if (firebase.auth().currentUser != null && FirebaseConfig.EMailAllowed !== \"\" && firebase.auth().currentUser.email !== FirebaseConfig.EMailAllowed)\r\n                await firebase.auth().signOut();\r\n\r\n}\r\n\r\nFirebaseSetup().then(async () => {\r\n        ReactDOM.render(<App />, document.getElementById('root'));\r\n})\r\n"],"sourceRoot":""}